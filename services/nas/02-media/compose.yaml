services:
  jellyfin:
    image: jellyfin/jellyfin:2025092205
    container_name: jellyfin
    devices:
      - /dev/dri:/dev/dri
    labels:
      - traefik.enable=true 
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.{{ local_domain }}`)"
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    volumes:
      - "{{ appdata_path }}/jellyfin:/config"
      - "{{ media_dataset_path }}:/media"
      - "{{ media_path }}books:/data/books"
      - "{{ media_path }}movies:/data/movies"
      - "{{ media_path }}tvshows:/data/tvshows"
      - "{{ media_path }}videos:/data/videos"
    environment:
      - "JELLYFIN_PublishedServerUrl=jellyfin.{{ local_domain }}"
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
    restart: unless-stopped

  ombi:
    image: lscr.io/linuxserver/ombi:4.47.1
    container_name: ombi
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/ombi/config:/config"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ombi.rule=Host(`ombi.{{ local_domain }}`)"
    restart: unless-stopped

  sabnzbd:
    image: ghcr.io/hotio/sabnzbd:release-4.5.3
    container_name: sabnzbd
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.rule=Host(`downloader.{{ local_domain }}`)"
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
      - VPN_ENABLED=true
      - VPN_CONF=wg0
      - VPN_PROVIDER=proton
      - "VPN_LAN_NETWORK={{ vault_lan_subnet }}"
      - VPN_LAN_LEAK_ENABLED=false
      - VPN_EXPOSE_PORTS_ON_LAN=8080/tcp,8118/tcp,8118/udp
      - VPN_AUTO_PORT_FORWARD=false
      - VPN_AUTO_PORT_FORWARD_TO_PORTS=
      - VPN_FIREWALL_TYPE=auto
      - VPN_HEALTHCHECK_ENABLED=true
      - VPN_NAMESERVERS=
      - PRIVOXY_ENABLED=true
      - UNBOUND_ENABLED=false
      - UNBOUND_NAMESERVERS
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1 #
      - net.ipv6.conf.all.disable_ipv6=1 #
    volumes:
      - "{{ appdata_path }}/sabnzbd/config:/config"
      - "{{ media_dataset_path }}/usenet:/data/usenet"
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 8080
      - 8118
    restart: unless-stopped

  prowlarr:
    image: ghcr.io/hotio/prowlarr:release-2.0.5.5160
    container_name: prowlarr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ local_domain }}`)"
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/prowlarr/config:/config"
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 9696
    restart: unless-stopped
    depends_on:
      - sabnzbd

  sonarr:
    image: ghcr.io/hotio/sonarr:release-4.0.15.2941
    container_name: sonarr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.{{ local_domain }}`)"
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/sonarr/config:/config"
      - "{{ media_dataset_path }}:/data"
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 8989
    restart: unless-stopped
    depends_on:
      - sabnzbd

  radarr:
    image: ghcr.io/hotio/radarr:release-5.27.5.10198
    container_name: radarr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.{{ local_domain }}`)"
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/radarr/config:/config"
      - "{{ media_dataset_path }}:/data"
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 7878
    restart: unless-stopped
    depends_on:
      - sabnzbd

  pinchflat:
    image: ghcr.io/kieraneglin/pinchflat@sha256:01b4f98aabaf3f5fe394213f7a32578c9e84e42080f52e2f8334021a4473b202
    container_name: pinchflat
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pinchflat.rule=Host(`pinchflat.{{ local_domain }}`)"
      - traefik.http.services.pinchflat.loadbalancer.server.port=8945
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ ntp_timezone }}"
    expose:
      - 8945
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/pinchflat/config:/config"
      - "{{ media_dataset_path }}/videos:/downloads"

  # jellyseerr:
  #   image: ghcr.io/hotio/jellyseerr:release-2.7.3
  #   container_name: jellyseerr
  #   environment:
  #     - LOG_LEVEL=debug
  #     - PORT=5055
  #     - "PUID={{ docker_compose_generator_uid }}"
  #     - "PGID={{ docker_compose_generator_gid }}"
  #     - "TZ={{ ntp_timezone }}"
  #   volumes:
  #     - "{{ appdata_path }}/jellyseer/config:/app/config"
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.{{ local_domain }}`)"
  #     - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
  #   healthcheck:
  #     test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
  #     start_period: 20s
  #     timeout: 3s
  #     interval: 15s
  #     retries: 3
  #   restart: unless-stopped
