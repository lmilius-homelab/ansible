---
ansible_host: "{{ vault_nvr_host_ip }}"

## telegraf
telegraf_plugins_base:
  - name: mem
  - name: system
  - name: cpu
    options:
      percpu: "true"
      totalcpu: "true"
      collect_cpu_time: "false"
      report_active: "false"
  - name: disk
    options:
      ignore_fs:
        - "tmpfs"
        - "devtmpfs"
        - "devfs"
      mountpoints:
        - "/"
  - name: diskio
    options:
      skip_serial_number: "true"
  - name: kernel
  - name: processes
  - name: docker
    options:
      endpoint: "unix:///var/run/docker.sock"
      perdevice: "true"
  - name: hddtemp
  - name: net
    options:
      interfaces:
        - "vmbr0"
        - "eno1"
  - name: sensors

# ironicbadger.docker_compose_generator
appdata_path: /mnt/video/appdata
# download_path: /mnt/nvme2tb/downloads
# media_path: /tank2/media_
# storage_path: /tank2/archives
# photoprism_dir: /tank2/photoprism
# photoprism_db_dir: /tank2/photoprism/database
# photoprism_compose_output_path: /home/deployer/photoprism
local_domain: "nvr.{{ vault_domain_name }}"


# frigate
frigate_config_filepath: "{{ appdata_path }}/frigate"
frigate_rtsp_password: "{{ vault_frigate_rtsp_password }}"
frigate_mqtt_host: "{{ vault_frigate_mqtt_host }}"
frigate_mqtt_user: "{{ vault_frigate_mqtt_user }}"
frigate_mqtt_password: "{{ vault_frigate_mqtt_password }}"
rtsp_camera_username: "{{ vault_rtsp_camera_username }}"
rtsp_camera_password: "{{ vault_rtsp_camera_password }}"
camera_subnet_prefix: "{{ vault_camera_subnet_prefix }}"

containers:
  ###
  - service_name: traefik
    active: true
    image: traefik
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`proxy.{{ local_domain }}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      - "{{ appdata_path }}/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: influxdb
    active: true
    image: influxdb:1.8
    volumes:
      - "{{ appdata_path }}/influxdb:/config"
    ports:
      - 8086:8086
    restart: unless-stopped
    include_global_env_vars: true
  ###
  - service_name: frigate
    active: true
    privileged: true
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: 256m
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frigate.entrypoints=websecure"
      - "traefik.http.routers.frigate.rule=Host(`frigate.{{ local_domain }}`)"
      - "traefik.http.services.frigate.loadbalancer.server.port=5000"
    devices:
      - /dev/dri/renderD128
      - /dev/apex_0:/dev/apex_0
      - /dev/apex_1:/dev/apex_1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ frigate_config_filepath }}/frigate.yml:/config/config.yml"
      - "{{ frigate_config_filepath }}/media:/media/frigate"
      - "{{ frigate_config_filepath }}/database:/config/db"
      - type: tmpfs # Option: 2GB of memory, reduces SSD wear
        target: /tmp/cache
        tmpfs:
          size: 2000000000
    ports:
      - "1935:1935"
      - "5000:5000"
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    environment:
      - "FRIGATE_RTSP_PASSWORD={{ frigate_rtsp_password }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
