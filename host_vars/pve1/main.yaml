---
ansible_host: "{{ vault_pve1_host_ip }}"
nextcloud_db_password: "{{ vault_nextcloud_db_password }}"
nextcloud_root_db_password: "{{ vault_nextcloud_root_db_password }}"
wordpress_shop_db_password: "{{ vault_wordpress_shop_db_password }}"
wordpress_shop_root_db_password: "{{ vault_wordpress_shop_root_db_password }}"
peertube_db_password: "{{ vault_peertube_db_password }}"
peertube_secret: "{{ vault_peertube_secret }}"
peertube_admin_password: "{{ vault_peertube_admin_password }}"
joplin_postgres_password: "{{ vault_joplin_postgres_password }}"

## telegraf
telegraf_plugins_base:
  - name: mem
  - name: system
  - name: cpu
    options:
      percpu: "true"
      totalcpu: "true"
      collect_cpu_time: "false"
      report_active: "false"
  - name: disk
    options:
      ignore_fs:
        - "tmpfs"
        - "devtmpfs"
        - "devfs"
      mountpoints:
        - "/"
  - name: diskio
    options:
      skip_serial_number: "true"
  - name: kernel
  - name: processes
  - name: docker
    options:
      endpoint: "unix:///var/run/docker.sock"
      perdevice: "true"
  - name: hddtemp
  - name: net
    options:
      interfaces:
        - "ens192"
        - "eno1"
  - name: sensors

zfs_path: /tank2
nvr_path: "{{ zfs_path }}/nvr"
# ironicbadger.docker_compose_generator
appdata_path: "{{ zfs_path }}/appdata"
# download_path: /mnt/nvme2tb/downloads
media_path: "{{ zfs_path }}/media_"
storage_path: "{{ zfs_path }}/archives"
photoprism_dir: "{{ zfs_path }}/photoprism"
photoprism_important: "{{ zfs_path }}/media_photos/Important"
# photoprism_db_dir: "{{ zfs_path }}/photoprism/database"
photoprism_compose_output_path: /home/deployer/photoprism
local_domain: "{{ vault_domain_name }}"
backup_drive: "/mnt/backups/BACKUPS"

# backups
backup_disk_uuid: "{{ vault_backup_disk_uuid }}"

# frigate
frigate_config_filepath: "{{ nvr_path }}/frigate"
frigate_rtsp_password: "{{ vault_frigate_rtsp_password }}"
frigate_mqtt_host: "{{ vault_frigate_mqtt_host }}"
frigate_mqtt_user: "{{ vault_frigate_mqtt_user }}"
frigate_mqtt_password: "{{ vault_frigate_mqtt_password }}"
rtsp_camera_username: "{{ vault_rtsp_camera_username }}"
rtsp_camera_password: "{{ vault_rtsp_camera_password }}"
camera_subnet_prefix: "{{ vault_camera_subnet_prefix }}"


containers:
  ###
  - service_name: frigate
    active: true
    privileged: true
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: 256m
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.frigate.entrypoints=websecure"
    #   - "traefik.http.routers.frigate.rule=Host(`frigate.{{ local_domain }}`)"
    #   - "traefik.http.services.frigate.loadbalancer.server.port=5000"
    devices:
      - /dev/dri/renderD128
      # - /dev/apex_0:/dev/apex_0
      # - /dev/apex_1:/dev/apex_1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ frigate_config_filepath }}/frigate.yml:/config/config.yml"
      - "{{ frigate_config_filepath }}/media:/media/frigate"
      - "{{ frigate_config_filepath }}/database:/config/db"
      # - "/dev/dri:/dev/dri"
      - type: tmpfs # Option: 2GB of memory, reduces SSD wear
        target: /tmp/cache
        tmpfs:
          size: 2000000000
    ports:
      - "1935:1935"
      - "5000:5000"
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    environment:
      - "FRIGATE_RTSP_PASSWORD={{ frigate_rtsp_password }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
