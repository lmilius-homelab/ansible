---

ansible_user: deployer
become: true
main_uid: "1100"
main_gid: "1100"

init_admin_pass: "{{ vault_init_admin_password }}"
cloudflare_account_email: "{{ vault_cf_email }}"
cloudflare_api_key: "{{ vault_cf_api_key }}"
admin_email: "{{ vault_admin_email }}"

# lm-traefik
traefik_file_provider: true
traefik_enable_dashboard: true #defaults to false
traefik_insecure_transport: false #defaults to false
traefik_exposed_by_default: false
traefik_config_filepath: "{{ appdata_path }}/traefik"
crowdsec_lapi_key: "{{ vault_crowdsec_lapi_key }}"

# frigate
frigate_filepath: "{{ zfs_path }}/frigate"
frigate_config_filepath: "{{ frigate_filepath }}/config"
frigate_rtsp_password: "{{ vault_frigate_rtsp_password }}"
frigate_host_ip: "{{ vault_nas_host_ip }}"
frigate_mqtt_host: "{{ vault_frigate_mqtt_host }}"
frigate_mqtt_user: "{{ vault_frigate_mqtt_user }}"
frigate_mqtt_password: "{{ vault_frigate_mqtt_password }}"
rtsp_camera_username: "{{ vault_rtsp_camera_username }}"
rtsp_camera_password: "{{ vault_rtsp_camera_password }}"
camera_subnet_prefix: "{{ vault_camera_subnet_prefix }}"

zfs_path: /storage
nvr_path: "{{ zfs_path }}/frigate"
domain_name: "{{ vault_domain_name }}"
local_domain: "nvr.{{ domain_name }}"

# ironicbadger.docker_compose_generator
appdata_path: "{{ zfs_path }}/appdata"
ntp_timezone: "America/Chicago"
global_env_vars:
  - "PUID={{ main_uid }}"
  - "PGID={{ main_gid }}"
  - "TZ={{ ntp_timezone }}"
docker_compose_generator_uid: "{{ main_uid }}"
docker_compose_generator_gid: "{{ main_gid }}"
docker_compose_generator_output_path: /home/deployer/services


containers:
  ###
  - service_name: traefik
    active: true
    image: traefik:v3.3.5
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`proxy.{{ local_domain }}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      - "{{ traefik_config_filepath }}:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: linuxserver/librespeed:5.4.1
    labels:
      - traefik.enable=true
      - "traefik.http.routers.librespeed.rule=Host(`speed.{{ local_domain }}`)"
    environment:
      - MODE=standalone
      - TELEMETRY=true
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: frigate
    active: true
    privileged: true
    image: ghcr.io/blakeblackshear/frigate:0.15.1
    shm_size: 256m
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frigate.entrypoints=websecure"
      - "traefik.http.routers.frigate.rule=Host(`frigate.{{ local_domain }}`)"
      - "traefik.http.services.frigate.loadbalancer.server.port=5000"
    devices:
      - /dev/dri/renderD128
      - /dev/apex_0:/dev/apex_0
      - /dev/apex_1:/dev/apex_1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ frigate_config_filepath }}:/config"
      - "{{ frigate_filepath }}/media:/media/frigate"
      - type: tmpfs # Option: 2GB of memory, reduces SSD wear
        target: /tmp/cache
        tmpfs:
          size: 2000000000
    ports:
      - "1935:1935"
      - "1984:1984" # go2rtc http api
      - "5000:5000"
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    environment:
      - "FRIGATE_RTSP_PASSWORD={{ frigate_rtsp_password }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
 